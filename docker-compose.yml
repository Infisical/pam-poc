version: "3.8"

services:
  # SSH Server (Proxy) - This would be your production server
  proxy:
    build:
      context: .
      dockerfile: proxy/Dockerfile
    ports:
      - "2222:2222" # SSH server
      - "8081:8081" # HTTP API for certificate generation
      - "8080:8080" # HTTP API for certificate generation
    networks:
      - proxy-network
    # Proxy only listens for connections, doesn't initiate them
    # It cannot reach the gateway directly

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    depends_on:
      - proxy
    environment:
      - SERVER_URL=http://proxy:8081
      - AGENT_NAME=web-agent
      - SSH_PORT=2222
      - LOCAL_PORT=8000
      - DOCKER_ENV=true
    networks:
      - gateway-network
      - proxy-network # Gateway can reach proxy, but proxy can't reach gateway
    # Use iptables to block incoming connections from proxy
    cap_add:
      - NET_ADMIN # Required for iptables

  gateway-1:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    depends_on:
      - proxy
    environment:
      - SERVER_URL=http://proxy:8081
      - AGENT_NAME=web-agent-1
      - SSH_PORT=2222
      - LOCAL_PORT=8000
      - DOCKER_ENV=true
    networks:
      - gateway-network
      - proxy-network # Gateway can reach proxy, but proxy can't reach gateway
    # Use iptables to block incoming connections from proxy
    cap_add:
      - NET_ADMIN # Required for iptables

  # Note: Client runs locally on your machine, not in Docker
  # Use: go run ./client/main.go

networks:
  proxy-network:
    driver: bridge
    # Network where gateway can reach proxy but proxy can't reach gateway
  gateway-network:
    driver: bridge
    internal: true # No external connectivity
    # Gateway's private network
